/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.elasticsearch.gradle.precommit.PrecommitTasks

plugins {
  id("com.github.johnrengelman.shadow") version "4.0.4"
}

apply plugin: 'elasticsearch.build'
apply plugin: 'nebula.maven-base-publish'
apply plugin: 'nebula.maven-scm'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'org.elasticsearch.client'

dependencies {
  compile "org.elasticsearch:elasticsearch:${version}"
  compile "org.elasticsearch.plugin:transport-netty3-client:${version}"
  compile "org.elasticsearch.plugin:transport-netty4-client:${version}"
  compile "org.elasticsearch.plugin:reindex-client:${version}"
  compile "org.elasticsearch.plugin:lang-mustache-client:${version}"
  compile "org.elasticsearch.plugin:percolator-client:${version}"
  compile "org.elasticsearch.plugin:parent-join-client:${version}"
  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
  testCompile "junit:junit:${versions.junit}"
  testCompile "org.hamcrest:hamcrest-all:${versions.hamcrest}"
}

dependencyLicenses {
  dependencies = project.configurations.runtime.fileCollection {
    it.group.startsWith('org.elasticsearch') == false
  }
}

forbiddenApisTest {
  // we don't use the core test-framework, no lucene classes present so we don't want the es-test-signatures to
  // be pulled in
  signaturesURLs = [PrecommitTasks.getResource('/forbidden/jdk-signatures.txt'),
                    PrecommitTasks.getResource('/forbidden/es-all-signatures.txt')]
}

namingConventions {
  testClass = 'com.carrotsearch.randomizedtesting.RandomizedTest'
  //we don't have integration tests
  skipIntegTestInDisguise = true
}

shadowJar {
    // Add classifier to distinguish the fat jar
    classifier = 'all'
    
    // Merge service files
    mergeServiceFiles()
    
    // Exclude signing files
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    
    
    // Merge Log4j2 configuration files
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

// Make the shadow jar the default artifact
artifacts {
    archives shadowJar
}
